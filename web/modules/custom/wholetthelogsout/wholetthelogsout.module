<?php

/**
 * @file
 * Core module for the Who Let the Logs Out platform.
 */

declare(strict_types = 1);

use Drupal\Core\Database\Query\AlterableInterface;
use Drupal\Core\Database\Query\SelectInterface;
use Drupal\wholetthelogsout\Enum\CustomEntityTypes;

/**
 * Implements hook_theme().
 */
function wholetthelogsout_theme($existing, $type, $theme, $path): array {
  $items = [];

  foreach (CustomEntityTypes::cases() as $entity_type) {
    $items[$entity_type->value] = [
      'render element' => 'elements',
    ];
  }

  return $items;
}

/**
 * Implements hook_query_TAG_alter().
 */
function wholetthelogsout_query_website_alter(AlterableInterface $query): void {
  if (!($query instanceof SelectInterface)) {
    return;
  }

  \Drupal::service('wholetthelogsout.query_helper')->queryTagAlter($query, CustomEntityTypes::Website);
}

/**
 * Implements hook_query_TAG_alter().
 */
function wholetthelogsout_query_event_alter(AlterableInterface $query): void {
  if (!($query instanceof SelectInterface)) {
    return;
  }

  \Drupal::service('wholetthelogsout.query_helper')->queryTagAlter($query, CustomEntityTypes::Event);
}

/**
 * Implements hook_cron().
 *
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 * @throws \Drupal\Core\Entity\EntityStorageException
 */
function wholetthelogsout_cron(): void {
  // Load event storage.
  $event_storage = \Drupal::entityTypeManager()->getStorage('event');

  // Find up to 100 expired events.
  $event_ids = $event_storage
    ->getQuery()
    ->accessCheck()
    ->condition('expire', \Drupal::time()->getRequestTime(), '<')
    ->addTag('access_bypass')
    ->range(0, 100)
    ->execute();

  // Check for event IDs.
  if (!$event_ids) {
    return;
  }

  // Load and delete the events.
  $event_storage->delete($event_storage->loadMultiple($event_ids));
}
