<?php

/**
 * @file
 * Core module for the Who Let the Logs Out platform.
 */

declare(strict_types = 1);

use Drupal\Core\Database\Query\AlterableInterface;
use Drupal\Core\Database\Query\SelectInterface;
use Drupal\wholetthelogsout\Enum\CustomEntityTypes;

/**
 * Implements hook_theme().
 */
function wholetthelogsout_theme($existing, $type, $theme, $path): array {
  $items = [];

  foreach (CustomEntityTypes::cases() as $entity_type) {
    $items[$entity_type->value] = [
      'render element' => 'elements',
    ];
  }

  return $items;
}

/**
 * Implements hook_query_TAG_alter().
 *
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 */
function wholetthelogsout_query_website_alter(AlterableInterface $query): void {
  if (!$query instanceof SelectInterface) {
    return;
  }

  $entity_type_id = CustomEntityTypes::Website->value;

  // Get the current user & filter.
  $user = \Drupal::currentUser();
  $filter = \Drupal::service('wholetthelogsout.query_helper')->isFiltered($query, $entity_type_id, $user);

  // Check if we should filter.
  if (!$filter) {
    return;
  }

  // Get the query tables.
  $tables = $query->getTables();

  // Determine the alias.
  $alias = isset($tables[$entity_type_id])
    ? $tables[$entity_type_id]['alias']
    : $tables['base_table']['alias'];

  // Generate the field to filter on.
  $field = "$alias.user_id";

  // Iterate the existing conditions.
  foreach ($query->conditions() as $condition) {
    // Check if the user filter condition already exists.
    if (is_array($condition) && ($condition['operator'] === '=') &&
    ($condition['field'] === $field) &&
    ($condition['value'] === $user->id())) {
      // No need to filter anymore.
      $filter = FALSE;

      break;
    }
  }

  // Filter for entities that this user owns, if needed.
  if (!$filter) {
    return;
  }

  $query->condition("$alias.user_id", (string) $user->id());
}
